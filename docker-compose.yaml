version: '3'
services:

#  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    depends_on:
#      - postgres_db
#      - redis
#    ports:
#      - "8000:8000"
#    networks:
#      - my-network
#
#  job-go:
#    image: job-go
#    depends_on:
#      - app
#    networks:
#      - my-network

  postgres_db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - my-network

  redis:
    image: redis
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - my-network

#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    networks:
#      - broker-kafka
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#
#  kafka:
#    image: confluentinc/cp-kafka:latest
#    networks:
#      - broker-kafka
#    depends_on:
#      - zookeeper
#    ports:
#      - 9092:9092
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#
#  kafdrop:
#    image: obsidiandynamics/kafdrop:latest
#    networks:
#      - broker-kafka
#    depends_on:
#      - kafka
#    ports:
#      - 19000:9000
#    environment:
#      KAFKA_BROKERCONNECT: kafka:29092
#
#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
#    environment:
#      - ELASTIC_USER=${ELASTIC_USER}
#      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
#      - discovery.type=single-node
#      - xpack.security.enabled=false
#      - ES_JAVA_OPTS=-Xms512m -Xmx512m
#    ports:
#      - "9200:9200"
#    volumes:
#      - esdata:/usr/share/elasticsearch/data
#
#  kibana:
#    image: docker.elastic.co/kibana/kibana:8.12.1
#    ports:
#      - "5601:5601"
#    environment:
#      ELASTICSEARCH_URL: http://elasticsearch:9200
#    depends_on:
#      - elasticsearch

networks:
  my-network:
    driver: bridge
#  broker-kafka:
#    driver: bridge

#volumes:
#  esdata:
#    driver: local